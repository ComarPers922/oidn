// =============================================================================
// Copyright 2009-2020 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// =============================================================================

#include "vec.ih"

struct TransferFunction
{
  // Forward and inverse functions
  vec3f (*uniform forward)(const uniform TransferFunction* uniform self, vec3f y);
  vec3f (*uniform inverse)(const uniform TransferFunction* uniform self, vec3f x);

  // Normalization (HDR only)
  uniform float xScale;
  uniform float xRcpScale;

  // Exposure (HDR only)
  uniform float yScale;
  uniform float yRcpScale;
};

// Computes the luminance of an RGB color
inline float luminance(vec3f c)
{
  return 0.212671f * c.x + 0.715160f * c.y + 0.072169f * c.z;
}

// Replaces infinity or NaN with zero
inline float inf_to_zero(float x)
{
  return select(isfinite(x), x, 0.f);
}

inline vec3f inf_to_zero(vec3f x)
{
  return select(isfinite(x), x, make_vec3f(0.f));
}